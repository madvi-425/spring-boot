pipeline {
  agent {
    docker {
      image 'docker754/my-java-sonar-docker'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    GIT_REPO = 'https://github.com/NappingLeader/spring-boot.git'
    GIT_BRANCH = 'main'
    GIT_CREDENTIALS = 'github'
    SONAR_URL = "http://52.66.216.216:9000"
    DOCKER_IMAGE = "docker754/demo:${BUILD_NUMBER}"
    GIT_USER_NAME = "NappingLeader"
    GIT_REPO_NAME = "spring-boot"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          branches: [[name: "*/${GIT_BRANCH}"]],
          userRemoteConfigs: [[
            url: "${GIT_REPO}",
            credentialsId: "${GIT_CREDENTIALS}"
          ]]
        ])
        sh 'echo âœ… Checkout successful'
      }
    }

    stage('Build and Test') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh '''
              mvn sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh "docker build -t ${DOCKER_IMAGE} ."
          }
          script {
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s') {
            sh '''
              git config user.email "auvroneil007@gmail.com"
              git config user.name "Auvro"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g spring-boot-app-manifests/deployment.yml
              git add spring-boot-app-manifests/deployment.yml
              git commit -m "Update image to version ${BUILD_NUMBER}" || echo "No changes to commit"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
            '''
          }
        }
      }
    }
  }
}

