pipeline {
  agent {
    docker {
      image 'docker754/my-java-sonar-docker'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  environment {
    SONAR_URL     = "http://52.66.216.216:9000"
    DOCKER_IMAGE  = "docker754/demo:${BUILD_NUMBER}"
    GIT_REPO_URL  = 'https://github.com/NappingLeader/spring-boot.git'
    GIT_REPO_PATH = 'java-maven-sonar-argocd-helm-k8s'
  }

  stages {
    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[url: env.GIT_REPO_URL, credentialsId: 'github']]
        ])
      }
    }

    stage('Build and Test') {
      steps {
        sh "cd ${env.GIT_REPO_PATH}/spring-boot-app && mvn clean package"
      }
    }

    stage('Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh """
            cd ${env.GIT_REPO_PATH}/spring-boot-app
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          """
        }
      }
    }

    stage('Docker Build & Push') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
          script {
            sh "cd ${env.GIT_REPO_PATH}/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
            docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
              docker.image("${DOCKER_IMAGE}").push()
            }
          }
        }
      }
    }
  }

  post {
    success {
      node {
        stage('Update Deployment File') {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh """
              git config user.email "auvroneil007@gmail.com"
              git config user.name "Auvro"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g ${env.GIT_REPO_PATH}/spring-boot-app-manifests/deployment.yml
              git add ${env.GIT_REPO_PATH}/spring-boot-app-manifests/deployment.yml
              git commit -m "Update image to version ${BUILD_NUMBER}" || echo "No changes"
              git push https://${GITHUB_TOKEN}@github.com/NappingLeader/spring-boot HEAD:main
            """
          }
        }
      }
    }
  }
}
